{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import {useDispatch} from 'react-redux'\n// import './Login.css';\n\n// const Login = () => {\n//     const [useremail, setUseremail] = useState('');\n//     const [userpassword, setUserpassword] = useState('');\n//     const [confirmuserpassword, setconfirmUserpassword] = useState('');\n//     const [Login, setLogin] = useState(true);\n//     const navigate = useNavigate();\n//     const dispatch=dispatch();\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n\n//         if (Login) {\n//             const users = JSON.parse(localStorage.getItem('users')) || [];\n\n//             const foundUser = users.find(\n//                 (user) => user.name === useremail && user.password === userpassword\n//             );\n\n//             if (foundUser) {\n//                 sessionStorage.setItem('loggedInUser', JSON.stringify(foundUser));\n//                 alert('Login successful!');\n//                 dispatch()\n//                 navigate('/todo', { state: { username: useremail } });\n//             } else {\n//                 alert('Invalid email or password');\n//             }\n//         } else {\n//             if (!useremail.trim() || !userpassword || !confirmuserpassword) {\n//                 alert('Please fill in all fields');\n//                 return;\n//             }\n\n//             if (userpassword !== confirmuserpassword) {\n//                 alert('Passwords do not match');\n//                 return;\n//             }\n\n//             const users = JSON.parse(localStorage.getItem('users')) || [];\n//             const existingUser = users.find((user) => user.name === useremail);\n//             if (existingUser) {\n//                 alert('User already exists!');\n//                 return;\n//             }\n//             const newUser = {\n//                 name: useremail,\n//                 password: userpassword,\n//             };\n\n//             users.push(newUser);\n//             localStorage.setItem('users', JSON.stringify(users));\n\n//             alert('Sign up successful! You can now login.');\n//             setLogin(true); \n//             setUseremail('');\n//             setUserpassword('');\n//             setconfirmUserpassword('');\n//         }\n//     };\n\n//     const handleSign = () => {\n//         setLogin(!Login);\n//         setUseremail('');\n//         setUserpassword('');\n//         setconfirmUserpassword('');\n//     };\n\n//     return (\n//         <div className=\"login-container\">\n//             <div className=\"login-box\">\n//                 <h2>{Login ? 'Login' : 'Sign Up'}</h2>\n//                 <form onSubmit={handleLogin}>\n//                     <input\n//                         type=\"text\"\n//                         placeholder=\"Enter your email\"\n//                         value={useremail}\n//                         onChange={(e) => setUseremail(e.target.value)}\n//                     />\n//                     <input\n//                         type=\"password\"\n//                         placeholder=\"Enter your Password\"\n//                         value={userpassword}\n//                         onChange={(e) => setUserpassword(e.target.value)}\n//                     />\n//                     {!Login && (\n//                         <input\n//                             type=\"password\"\n//                             placeholder=\"Re-Enter your Password\"\n//                             value={confirmuserpassword}\n//                             onChange={(e) => setconfirmUserpassword(e.target.value)}\n//                         />\n//                     )}\n//                     {Login ? (\n//                         <p>\n//                             Don't have an account?{' '}\n//                             <span\n//                                 onClick={handleSign}\n//                                 style={{ cursor: 'pointer', color: 'blue' }}\n//                             >\n//                                 Sign Up\n//                             </span>\n//                         </p>\n//                     ) : (\n//                         <p>\n//                             Already have an account?{' '}\n//                             <span\n//                                 onClick={handleSign}\n//                                 style={{ cursor: 'pointer', color: 'blue' }}\n//                             >\n//                                 Login\n//                             </span>\n//                         </p>\n//                     )}\n//                     <button type=\"submit\">Continue</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { LOGIN_SUCCESS, LOGIN_FAILURE } from './actions';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [useremail, setUseremail] = useState('');\n  const [userpassword, setUserpassword] = useState('');\n  const [confirmuserpassword, setconfirmUserpassword] = useState('');\n  const [Login, setLogin] = useState(true);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleLogin = e => {\n    e.preventDefault();\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    if (Login) {\n      const foundUser = users.find(user => user.name === useremail && user.password === userpassword);\n      if (foundUser) {\n        sessionStorage.setItem('loggedInUser', JSON.stringify(foundUser));\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: foundUser\n        });\n        alert('Login successful!');\n        navigate('/todo', {\n          state: {\n            username: useremail\n          }\n        });\n      } else {\n        dispatch({\n          type: LOGIN_FAILURE\n        });\n        alert('Invalid email or password');\n      }\n    } else {\n      if (!useremail.trim() || !userpassword || !confirmuserpassword) {\n        alert('Please fill in all fields');\n        return;\n      }\n      if (userpassword !== confirmuserpassword) {\n        alert('Passwords do not match');\n        return;\n      }\n      const existingUser = users.find(user => user.name === useremail);\n      if (existingUser) {\n        alert('User already exists!');\n        return;\n      }\n      const newUser = {\n        name: useremail,\n        password: userpassword\n      };\n      users.push(newUser);\n      localStorage.setItem('users', JSON.stringify(users));\n      alert('Sign up successful! You can now login.');\n      setLogin(true);\n      setUseremail('');\n      setUserpassword('');\n      setconfirmUserpassword('');\n    }\n  };\n  const handleSign = () => {\n    setLogin(!Login);\n    setUseremail('');\n    setUserpassword('');\n    setconfirmUserpassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Login ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your email\",\n          value: useremail,\n          onChange: e => setUseremail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your Password\",\n          value: userpassword,\n          onChange: e => setUserpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), !Login && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Re-Enter your Password\",\n          value: confirmuserpassword,\n          onChange: e => setconfirmUserpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), Login ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleSign,\n            style: {\n              cursor: 'pointer',\n              color: 'blue'\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleSign,\n            style: {\n              cursor: 'pointer',\n              color: 'blue'\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tOovObx9uFABmyyXhiM3bNln7bg=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useDispatch","LOGIN_SUCCESS","LOGIN_FAILURE","jsxDEV","_jsxDEV","Login","_s","useremail","setUseremail","userpassword","setUserpassword","confirmuserpassword","setconfirmUserpassword","setLogin","navigate","dispatch","handleLogin","e","preventDefault","users","JSON","parse","localStorage","getItem","foundUser","find","user","name","password","sessionStorage","setItem","stringify","type","payload","alert","state","username","trim","existingUser","newUser","push","handleSign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","onClick","style","cursor","color","_c","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/components/Login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {useDispatch} from 'react-redux'\r\n// import './Login.css';\r\n\r\n// const Login = () => {\r\n//     const [useremail, setUseremail] = useState('');\r\n//     const [userpassword, setUserpassword] = useState('');\r\n//     const [confirmuserpassword, setconfirmUserpassword] = useState('');\r\n//     const [Login, setLogin] = useState(true);\r\n//     const navigate = useNavigate();\r\n//     const dispatch=dispatch();\r\n\r\n//     const handleLogin = (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (Login) {\r\n//             const users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n//             const foundUser = users.find(\r\n//                 (user) => user.name === useremail && user.password === userpassword\r\n//             );\r\n\r\n//             if (foundUser) {\r\n//                 sessionStorage.setItem('loggedInUser', JSON.stringify(foundUser));\r\n//                 alert('Login successful!');\r\n//                 dispatch()\r\n//                 navigate('/todo', { state: { username: useremail } });\r\n//             } else {\r\n//                 alert('Invalid email or password');\r\n//             }\r\n//         } else {\r\n//             if (!useremail.trim() || !userpassword || !confirmuserpassword) {\r\n//                 alert('Please fill in all fields');\r\n//                 return;\r\n//             }\r\n\r\n//             if (userpassword !== confirmuserpassword) {\r\n//                 alert('Passwords do not match');\r\n//                 return;\r\n//             }\r\n\r\n//             const users = JSON.parse(localStorage.getItem('users')) || [];\r\n//             const existingUser = users.find((user) => user.name === useremail);\r\n//             if (existingUser) {\r\n//                 alert('User already exists!');\r\n//                 return;\r\n//             }\r\n//             const newUser = {\r\n//                 name: useremail,\r\n//                 password: userpassword,\r\n//             };\r\n\r\n//             users.push(newUser);\r\n//             localStorage.setItem('users', JSON.stringify(users));\r\n\r\n//             alert('Sign up successful! You can now login.');\r\n//             setLogin(true); \r\n//             setUseremail('');\r\n//             setUserpassword('');\r\n//             setconfirmUserpassword('');\r\n//         }\r\n//     };\r\n\r\n//     const handleSign = () => {\r\n//         setLogin(!Login);\r\n//         setUseremail('');\r\n//         setUserpassword('');\r\n//         setconfirmUserpassword('');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <div className=\"login-box\">\r\n//                 <h2>{Login ? 'Login' : 'Sign Up'}</h2>\r\n//                 <form onSubmit={handleLogin}>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         placeholder=\"Enter your email\"\r\n//                         value={useremail}\r\n//                         onChange={(e) => setUseremail(e.target.value)}\r\n//                     />\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         placeholder=\"Enter your Password\"\r\n//                         value={userpassword}\r\n//                         onChange={(e) => setUserpassword(e.target.value)}\r\n//                     />\r\n//                     {!Login && (\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             placeholder=\"Re-Enter your Password\"\r\n//                             value={confirmuserpassword}\r\n//                             onChange={(e) => setconfirmUserpassword(e.target.value)}\r\n//                         />\r\n//                     )}\r\n//                     {Login ? (\r\n//                         <p>\r\n//                             Don't have an account?{' '}\r\n//                             <span\r\n//                                 onClick={handleSign}\r\n//                                 style={{ cursor: 'pointer', color: 'blue' }}\r\n//                             >\r\n//                                 Sign Up\r\n//                             </span>\r\n//                         </p>\r\n//                     ) : (\r\n//                         <p>\r\n//                             Already have an account?{' '}\r\n//                             <span\r\n//                                 onClick={handleSign}\r\n//                                 style={{ cursor: 'pointer', color: 'blue' }}\r\n//                             >\r\n//                                 Login\r\n//                             </span>\r\n//                         </p>\r\n//                     )}\r\n//                     <button type=\"submit\">Continue</button>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LOGIN_SUCCESS, LOGIN_FAILURE } from './actions';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const [useremail, setUseremail] = useState('');\r\n  const [userpassword, setUserpassword] = useState('');\r\n  const [confirmuserpassword, setconfirmUserpassword] = useState('');\r\n  const [Login, setLogin] = useState(true);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n    if (Login) {\r\n      const foundUser = users.find(\r\n        (user) => user.name === useremail && user.password === userpassword\r\n      );\r\n\r\n      if (foundUser) {\r\n        sessionStorage.setItem('loggedInUser', JSON.stringify(foundUser));\r\n        dispatch({ type: LOGIN_SUCCESS, payload: foundUser });\r\n        alert('Login successful!');\r\n        navigate('/todo', { state: { username: useremail } });\r\n      } else {\r\n        dispatch({ type: LOGIN_FAILURE });\r\n        alert('Invalid email or password');\r\n      }\r\n    } else {\r\n      if (!useremail.trim() || !userpassword || !confirmuserpassword) {\r\n        alert('Please fill in all fields');\r\n        return;\r\n      }\r\n\r\n      if (userpassword !== confirmuserpassword) {\r\n        alert('Passwords do not match');\r\n        return;\r\n      }\r\n\r\n      const existingUser = users.find((user) => user.name === useremail);\r\n      if (existingUser) {\r\n        alert('User already exists!');\r\n        return;\r\n      }\r\n\r\n      const newUser = {\r\n        name: useremail,\r\n        password: userpassword,\r\n      };\r\n\r\n      users.push(newUser);\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n      alert('Sign up successful! You can now login.');\r\n      setLogin(true);\r\n      setUseremail('');\r\n      setUserpassword('');\r\n      setconfirmUserpassword('');\r\n    }\r\n  };\r\n\r\n  const handleSign = () => {\r\n    setLogin(!Login);\r\n    setUseremail('');\r\n    setUserpassword('');\r\n    setconfirmUserpassword('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>{Login ? 'Login' : 'Sign Up'}</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            value={useremail}\r\n            onChange={(e) => setUseremail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your Password\"\r\n            value={userpassword}\r\n            onChange={(e) => setUserpassword(e.target.value)}\r\n          />\r\n          {!Login && (\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Re-Enter your Password\"\r\n              value={confirmuserpassword}\r\n              onChange={(e) => setconfirmUserpassword(e.target.value)}\r\n            />\r\n          )}\r\n          {Login ? (\r\n            <p>\r\n              Don't have an account?{' '}\r\n              <span onClick={handleSign} style={{ cursor: 'pointer', color: 'blue' }}>\r\n                Sign Up\r\n              </span>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Already have an account?{' '}\r\n              <span onClick={handleSign} style={{ cursor: 'pointer', color: 'blue' }}>\r\n                Login\r\n              </span>\r\n            </p>\r\n          )}\r\n          <button type=\"submit\">Continue</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}