{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\components\\\\TaskInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = () => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (taskName) {\n      const newTask = {\n        id: Date.now(),\n        name: taskName,\n        priority: 'Medium'\n      };\n      dispatch(addTask(newTask));\n      setTaskName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskName,\n      onChange: e => setTaskName(e.target.value),\n      placeholder: \"Add new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskInput, \"jHVVkFvZGAOwH+QoJEqiqklhoDY=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskInput;\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","useDispatch","addTask","jsxDEV","_jsxDEV","TaskInput","_s","taskName","setTaskName","dispatch","handleSubmit","e","preventDefault","newTask","id","Date","now","name","priority","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/components/TaskInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask } from '../redux/actions';\r\n\r\nconst TaskInput = () => {\r\n  const [taskName, setTaskName] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (taskName) {\r\n      const newTask = { id: Date.now(), name: taskName, priority: 'Medium' };\r\n      dispatch(addTask(newTask));\r\n      setTaskName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        value={taskName} \r\n        onChange={(e) => setTaskName(e.target.value)} \r\n        placeholder=\"Add new task\" \r\n      />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,QAAQ,EAAE;MACZ,MAAMM,OAAO,GAAG;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAEV,QAAQ;QAAEW,QAAQ,EAAE;MAAS,CAAC;MACtET,QAAQ,CAACP,OAAO,CAACW,OAAO,CAAC,CAAC;MAC1BL,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAMe,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGZ,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFzB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACvB,EAAA,CAxBID,SAAS;EAAA,QAEIJ,WAAW;AAAA;AAAA6B,EAAA,GAFxBzB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}