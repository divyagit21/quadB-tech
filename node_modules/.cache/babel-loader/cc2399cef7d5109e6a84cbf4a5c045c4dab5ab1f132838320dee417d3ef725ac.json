{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport './Login.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    if (username.trim()) {\n      const user = {\n        name: username\n      };\n      localStorage.setItem('user', JSON.stringify(user));\n      navigate('/todo');\n    } else {\n      alert('Please enter a valid name');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login / Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your email\",\n          value: username,\n          onChange: e => setUseremail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Password\",\n          value: username,\n          onChange: e => setUserpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"9Of5vyGQsQBqpNBl2ObZgwsT0Q0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","navigate","handleLogin","e","preventDefault","trim","user","name","localStorage","setItem","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","setUseremail","target","setUserpassword","_c","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport './Login.css'; // Importing the CSS file\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault(); \r\n    if (username.trim()) {\r\n      const user = { name: username };\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      navigate('/todo');\r\n    } else {\r\n      alert('Please enter a valid name');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Login / Sign Up</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            value={username}\r\n            onChange={(e) => setUseremail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your Password\"\r\n            value={username}\r\n            onChange={(e) => setUserpassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Continue</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,QAAQ,CAACM,IAAI,CAAC,CAAC,EAAE;MACnB,MAAMC,IAAI,GAAG;QAAEC,IAAI,EAAER;MAAS,CAAC;MAC/BS,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;MAClDL,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,MAAM;MACLW,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BlB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlB,OAAA;QAAAkB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtB,OAAA;QAAMuB,QAAQ,EAAEjB,WAAY;QAAAY,QAAA,gBAC1BlB,OAAA;UACEwB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEvB,QAAS;UAChBwB,QAAQ,EAAGpB,CAAC,IAAKqB,YAAY,CAACrB,CAAC,CAACsB,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACFtB,OAAA;UACEwB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,qBAAqB;UACjCC,KAAK,EAAEvB,QAAS;UAChBwB,QAAQ,EAAGpB,CAAC,IAAKuB,eAAe,CAACvB,CAAC,CAACsB,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACFtB,OAAA;UAAQwB,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CArCID,KAAK;EAAA,QAEQH,WAAW;AAAA;AAAAiC,EAAA,GAFxB9B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}