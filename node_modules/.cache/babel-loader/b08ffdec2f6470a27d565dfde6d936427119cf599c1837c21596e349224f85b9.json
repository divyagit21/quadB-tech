{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\components\\\\TaskInput.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const TaskInput = ({ onAddTask }) => {\n//   const [taskText, setTaskText] = useState('');\n//   const [taskType, setTaskType] = useState('indoor');\n//   const [taskCity, setTaskCity] = useState('');\n//   const [priority, setPriority] = useState('Medium');\n\n//   const handleAdd = () => {\n//     if (taskText.trim() === '') return alert('Enter a task!');\n//     if (taskType === 'outdoor' && taskCity.trim() === '') return alert('Enter city!');\n\n//     onAddTask(taskText, taskType, taskCity, priority);\n\n//     setTaskText('');\n//     setTaskCity('');\n//     setTaskType('indoor');\n//     setPriority('Medium');\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <input\n//         type=\"text\"\n//         value={taskText}\n//         onChange={(e) => setTaskText(e.target.value)}\n//         placeholder=\"Enter your task\"\n//         style={styles.input}\n//       />\n\n//       <select\n//         value={taskType}\n//         onChange={(e) => setTaskType(e.target.value)}\n//         style={styles.select}\n//       >\n//         <option value=\"indoor\">Indoor</option>\n//         <option value=\"outdoor\">Outdoor</option>\n//       </select>\n\n//       {taskType === 'outdoor' && (\n//         <input\n//           type=\"text\"\n//           value={taskCity}\n//           onChange={(e) => setTaskCity(e.target.value)}\n//           placeholder=\"City\"\n//           style={styles.input}\n//         />\n//       )}\n\n//       <select\n//         value={priority}\n//         onChange={(e) => setPriority(e.target.value)}\n//         style={styles.select}\n//       >\n//         <option value=\"High\">High Priority</option>\n//         <option value=\"Medium\">Medium Priority</option>\n//         <option value=\"Low\">Low Priority</option>\n//       </select>\n\n//       <button onClick={handleAdd} style={styles.button}>Add Task</button>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     marginBottom: '25px',\n//     backgroundColor: '#ffffff',\n//     padding: '20px',\n//     borderRadius: '10px',\n//     boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//     maxWidth: '700px',\n//   },\n//   input: {\n//     padding: '10px',\n//     borderRadius: '5px',\n//     border: '1px solid #a0d9c6',\n//     backgroundColor: '#f0fdfa',\n//     marginRight: '10px',\n//     marginBottom: '10px'\n//   },\n//   select: {\n//     padding: '10px',\n//     borderRadius: '5px',\n//     border: '1px solid #a0d9c6',\n//     backgroundColor: '#f0fdfa',\n//     marginRight: '10px',\n//     marginBottom: '10px'\n//   },\n//   button: {\n//     padding: '10px 16px',\n//     backgroundColor: '#38b2ac',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '5px',\n//     cursor: 'pointer',\n//   },\n// };\n\n// export default TaskInput;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = ({\n  onAddTask\n}) => {\n  _s();\n  const [taskText, setTaskText] = useState('');\n  const [taskType, setTaskType] = useState('indoor');\n  const [taskCity, setTaskCity] = useState('');\n  const [priority, setPriority] = useState('Medium');\n  const handleAdd = () => {\n    if (taskText.trim() === '') return alert('Enter a task!');\n    if (taskType === 'outdoor' && taskCity.trim() === '') return alert('Enter city!');\n    onAddTask({\n      text: taskText,\n      type: taskType,\n      city: taskType === 'outdoor' ? taskCity : '',\n      weather: null,\n      priority\n    });\n    setTaskText('');\n    setTaskCity('');\n    setTaskType('indoor');\n    setPriority('Medium');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value),\n      placeholder: \"Enter your task\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: taskType,\n      onChange: e => setTaskType(e.target.value),\n      style: styles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"indoor\",\n        children: \"Indoor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"outdoor\",\n        children: \"Outdoor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), taskType === 'outdoor' && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskCity,\n      onChange: e => setTaskCity(e.target.value),\n      placeholder: \"City\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: priority,\n      onChange: e => setPriority(e.target.value),\n      style: styles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"High\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      style: styles.button,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskInput, \"QHEHXVAm+MjUJW2fi1EDAVsl/vQ=\");\n_c = TaskInput;\nconst styles = {\n  container: {\n    marginBottom: '25px',\n    backgroundColor: '#ffffff',\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n    maxWidth: '700px'\n  },\n  input: {\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #a0d9c6',\n    backgroundColor: '#f0fdfa',\n    marginRight: '10px'\n  },\n  select: {\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #a0d9c6',\n    backgroundColor: '#f0fdfa',\n    marginRight: '10px'\n  },\n  button: {\n    padding: '10px 16px',\n    backgroundColor: '#38b2ac',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  }\n};\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskInput","onAddTask","_s","taskText","setTaskText","taskType","setTaskType","taskCity","setTaskCity","priority","setPriority","handleAdd","trim","alert","text","type","city","weather","style","styles","container","children","value","onChange","e","target","placeholder","input","fileName","_jsxFileName","lineNumber","columnNumber","select","onClick","button","_c","marginBottom","backgroundColor","padding","borderRadius","boxShadow","maxWidth","border","marginRight","color","cursor","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/components/TaskInput.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const TaskInput = ({ onAddTask }) => {\r\n//   const [taskText, setTaskText] = useState('');\r\n//   const [taskType, setTaskType] = useState('indoor');\r\n//   const [taskCity, setTaskCity] = useState('');\r\n//   const [priority, setPriority] = useState('Medium');\r\n\r\n//   const handleAdd = () => {\r\n//     if (taskText.trim() === '') return alert('Enter a task!');\r\n//     if (taskType === 'outdoor' && taskCity.trim() === '') return alert('Enter city!');\r\n\r\n//     onAddTask(taskText, taskType, taskCity, priority);\r\n\r\n//     setTaskText('');\r\n//     setTaskCity('');\r\n//     setTaskType('indoor');\r\n//     setPriority('Medium');\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={taskText}\r\n//         onChange={(e) => setTaskText(e.target.value)}\r\n//         placeholder=\"Enter your task\"\r\n//         style={styles.input}\r\n//       />\r\n\r\n//       <select\r\n//         value={taskType}\r\n//         onChange={(e) => setTaskType(e.target.value)}\r\n//         style={styles.select}\r\n//       >\r\n//         <option value=\"indoor\">Indoor</option>\r\n//         <option value=\"outdoor\">Outdoor</option>\r\n//       </select>\r\n\r\n//       {taskType === 'outdoor' && (\r\n//         <input\r\n//           type=\"text\"\r\n//           value={taskCity}\r\n//           onChange={(e) => setTaskCity(e.target.value)}\r\n//           placeholder=\"City\"\r\n//           style={styles.input}\r\n//         />\r\n//       )}\r\n\r\n//       <select\r\n//         value={priority}\r\n//         onChange={(e) => setPriority(e.target.value)}\r\n//         style={styles.select}\r\n//       >\r\n//         <option value=\"High\">High Priority</option>\r\n//         <option value=\"Medium\">Medium Priority</option>\r\n//         <option value=\"Low\">Low Priority</option>\r\n//       </select>\r\n\r\n//       <button onClick={handleAdd} style={styles.button}>Add Task</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     marginBottom: '25px',\r\n//     backgroundColor: '#ffffff',\r\n//     padding: '20px',\r\n//     borderRadius: '10px',\r\n//     boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n//     maxWidth: '700px',\r\n//   },\r\n//   input: {\r\n//     padding: '10px',\r\n//     borderRadius: '5px',\r\n//     border: '1px solid #a0d9c6',\r\n//     backgroundColor: '#f0fdfa',\r\n//     marginRight: '10px',\r\n//     marginBottom: '10px'\r\n//   },\r\n//   select: {\r\n//     padding: '10px',\r\n//     borderRadius: '5px',\r\n//     border: '1px solid #a0d9c6',\r\n//     backgroundColor: '#f0fdfa',\r\n//     marginRight: '10px',\r\n//     marginBottom: '10px'\r\n//   },\r\n//   button: {\r\n//     padding: '10px 16px',\r\n//     backgroundColor: '#38b2ac',\r\n//     color: 'white',\r\n//     border: 'none',\r\n//     borderRadius: '5px',\r\n//     cursor: 'pointer',\r\n//   },\r\n// };\r\n\r\n// export default TaskInput;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst TaskInput = ({ onAddTask }) => {\r\n  const [taskText, setTaskText] = useState('');\r\n  const [taskType, setTaskType] = useState('indoor');\r\n  const [taskCity, setTaskCity] = useState('');\r\n  const [priority, setPriority] = useState('Medium');\r\n\r\n  const handleAdd = () => {\r\n    if (taskText.trim() === '') return alert('Enter a task!');\r\n    if (taskType === 'outdoor' && taskCity.trim() === '') return alert('Enter city!');\r\n\r\n    onAddTask({\r\n      text: taskText,\r\n      type: taskType,\r\n      city: taskType === 'outdoor' ? taskCity : '',\r\n      weather: null,\r\n      priority,\r\n    });\r\n\r\n    setTaskText('');\r\n    setTaskCity('');\r\n    setTaskType('indoor');\r\n    setPriority('Medium');\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <input\r\n        type=\"text\"\r\n        value={taskText}\r\n        onChange={(e) => setTaskText(e.target.value)}\r\n        placeholder=\"Enter your task\"\r\n        style={styles.input}\r\n      />\r\n\r\n      <select value={taskType} onChange={(e) => setTaskType(e.target.value)} style={styles.select}>\r\n        <option value=\"indoor\">Indoor</option>\r\n        <option value=\"outdoor\">Outdoor</option>\r\n      </select>\r\n\r\n      {taskType === 'outdoor' && (\r\n        <input\r\n          type=\"text\"\r\n          value={taskCity}\r\n          onChange={(e) => setTaskCity(e.target.value)}\r\n          placeholder=\"City\"\r\n          style={styles.input}\r\n        />\r\n      )}\r\n\r\n      <select value={priority} onChange={(e) => setPriority(e.target.value)} style={styles.select}>\r\n        <option value=\"High\">High</option>\r\n        <option value=\"Medium\">Medium</option>\r\n        <option value=\"Low\">Low</option>\r\n      </select>\r\n\r\n      <button onClick={handleAdd} style={styles.button}>Add Task</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    marginBottom: '25px',\r\n    backgroundColor: '#ffffff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n    maxWidth: '700px',\r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #a0d9c6',\r\n    backgroundColor: '#f0fdfa',\r\n    marginRight: '10px',\r\n  },\r\n  select: {\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #a0d9c6',\r\n    backgroundColor: '#f0fdfa',\r\n    marginRight: '10px',\r\n  },\r\n  button: {\r\n    padding: '10px 16px',\r\n    backgroundColor: '#38b2ac',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default TaskInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}