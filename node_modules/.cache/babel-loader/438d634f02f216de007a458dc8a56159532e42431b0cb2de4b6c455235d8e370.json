{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\pages\\\\Todo.jsx\",\n  _s = $RefreshSig$();\n// Todo.js\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport TaskInput from '../components/TaskInput';\nimport TaskList from '../components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_API_KEY = '445f1860e609a11c24d90f09fa0cc0cb';\nconst Todo = () => {\n  _s();\n  var _location$state, _JSON$parse;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const storedUser = sessionStorage.getItem('loggedInUser');\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || ((_JSON$parse = JSON.parse(storedUser)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.name);\n  const [tasks, setTasks] = useState([]);\n  const [loadingTaskIndex, setLoadingTaskIndex] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (!storedUser) {\n      navigate('/');\n      return;\n    }\n    if (username) {\n      const storedTasks = JSON.parse(localStorage.getItem(`tasks_${username}`)) || [];\n      setTasks(storedTasks);\n    }\n  }, [username, storedUser, navigate]);\n  const fetchWeather = async (city, index) => {\n    try {\n      setLoadingTaskIndex(index);\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_API_KEY}&units=metric`);\n      const weather = response.data.weather[0].description;\n      const temp = response.data.main.temp;\n      const updatedTasks = [...tasks];\n      updatedTasks[index].weather = `${weather}, ${temp}°C`;\n      setTasks(updatedTasks);\n      localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\n    } catch (err) {\n      setError('Failed to fetch weather. Please check the city name.');\n    } finally {\n      setLoadingTaskIndex(null);\n    }\n  };\n  const handleEditTask = (updatedTask, index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index] = updatedTask;\n    setTasks(updatedTasks);\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\n  };\n  const handleAddTask = (taskText, taskType, taskCity, taskPriority) => {\n    if (taskText.trim() === '') {\n      alert('Please enter a task');\n      return;\n    }\n    if (taskType === 'outdoor' && taskCity.trim() === '') {\n      alert('Please enter your city for outdoor task');\n      return;\n    }\n    const newTask = {\n      text: taskText,\n      type: taskType,\n      city: taskType === 'outdoor' ? taskCity : '',\n      weather: null,\n      priority: taskPriority || 'Medium'\n    };\n    const updatedTasks = [...tasks, newTask];\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\n    setTasks(updatedTasks);\n    setError('');\n  };\n  const handleDelete = indexToDelete => {\n    const updatedTasks = tasks.filter((_, index) => index !== indexToDelete);\n    setTasks(updatedTasks);\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\n  };\n  const handleLogout = () => {\n    sessionStorage.removeItem('loggedInUser');\n    navigate('/');\n  };\n  if (!storedUser) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px',\n      backgroundColor: '#e6f9f2',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#2f855a',\n        marginBottom: '20px'\n      },\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        backgroundColor: '#e53e3e',\n        color: 'white',\n        padding: '8px 14px',\n        borderRadius: '5px',\n        border: 'none',\n        cursor: 'pointer',\n        marginBottom: '20px'\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onFetchWeather: fetchWeather,\n      onDelete: handleDelete,\n      loadingIndex: loadingTaskIndex,\n      onEdit: handleEditTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"S/r6OvwweTiGXM2a3i0KD/ddMlM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","axios","TaskInput","TaskList","jsxDEV","_jsxDEV","WEATHER_API_KEY","Todo","_s","_location$state","_JSON$parse","location","navigate","storedUser","sessionStorage","getItem","username","state","JSON","parse","name","tasks","setTasks","loadingTaskIndex","setLoadingTaskIndex","error","setError","storedTasks","localStorage","fetchWeather","city","index","response","get","weather","data","description","temp","main","updatedTasks","setItem","stringify","err","handleEditTask","updatedTask","handleAddTask","taskText","taskType","taskCity","taskPriority","trim","alert","newTask","text","type","priority","handleDelete","indexToDelete","filter","_","handleLogout","removeItem","style","padding","backgroundColor","minHeight","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","borderRadius","border","cursor","onAddTask","onFetchWeather","onDelete","loadingIndex","onEdit","_c","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/pages/Todo.jsx"],"sourcesContent":["// Todo.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TaskInput from '../components/TaskInput';\r\nimport TaskList from '../components/TaskList';\r\n\r\nconst WEATHER_API_KEY = '445f1860e609a11c24d90f09fa0cc0cb';\r\n\r\nconst Todo = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const storedUser = sessionStorage.getItem('loggedInUser');\r\n  const username = location.state?.username || JSON.parse(storedUser)?.name;\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loadingTaskIndex, setLoadingTaskIndex] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!storedUser) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    if (username) {\r\n      const storedTasks = JSON.parse(localStorage.getItem(`tasks_${username}`)) || [];\r\n      setTasks(storedTasks);\r\n    }\r\n  }, [username, storedUser, navigate]);\r\n\r\n  const fetchWeather = async (city, index) => {\r\n    try {\r\n      setLoadingTaskIndex(index);\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_API_KEY}&units=metric`\r\n      );\r\n      const weather = response.data.weather[0].description;\r\n      const temp = response.data.main.temp;\r\n\r\n      const updatedTasks = [...tasks];\r\n      updatedTasks[index].weather = `${weather}, ${temp}°C`;\r\n      setTasks(updatedTasks);\r\n      localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\r\n    } catch (err) {\r\n      setError('Failed to fetch weather. Please check the city name.');\r\n    } finally {\r\n      setLoadingTaskIndex(null);\r\n    }\r\n  };\r\n  const handleEditTask = (updatedTask, index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index] = updatedTask;\r\n    setTasks(updatedTasks);\r\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\r\n  };\r\n  \r\n  const handleAddTask = (taskText, taskType, taskCity, taskPriority) => {\r\n    if (taskText.trim() === '') {\r\n      alert('Please enter a task');\r\n      return;\r\n    }\r\n    if (taskType === 'outdoor' && taskCity.trim() === '') {\r\n      alert('Please enter your city for outdoor task');\r\n      return;\r\n    }\r\n\r\n    const newTask = {\r\n      text: taskText,\r\n      type: taskType,\r\n      city: taskType === 'outdoor' ? taskCity : '',\r\n      weather: null,\r\n      priority: taskPriority || 'Medium',\r\n    };\r\n\r\n    const updatedTasks = [...tasks, newTask];\r\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\r\n    setTasks(updatedTasks);\r\n    setError('');\r\n  };\r\n\r\n  const handleDelete = (indexToDelete) => {\r\n    const updatedTasks = tasks.filter((_, index) => index !== indexToDelete);\r\n    setTasks(updatedTasks);\r\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updatedTasks));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem('loggedInUser');\r\n    navigate('/');\r\n  };\r\n\r\n  if (!storedUser) return null;\r\n\r\n  return (\r\n    <div style={{ padding: '30px', backgroundColor: '#e6f9f2', minHeight: '100vh' }}>\r\n      <h2 style={{ color: '#2f855a', marginBottom: '20px' }}>Welcome, {username}!</h2>\r\n      <button\r\n        onClick={handleLogout}\r\n        style={{\r\n          backgroundColor: '#e53e3e',\r\n          color: 'white',\r\n          padding: '8px 14px',\r\n          borderRadius: '5px',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n          marginBottom: '20px'\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n\r\n      <TaskInput onAddTask={handleAddTask} />\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <TaskList\r\n  tasks={tasks}\r\n  onFetchWeather={fetchWeather}\r\n  onDelete={handleDelete}\r\n  loadingIndex={loadingTaskIndex}\r\n  onEdit={handleEditTask}\r\n/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}