{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\components\\\\Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getWeather } from '../api/weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    if (task.location) {\n      // Fetch weather data if the task has a location (e.g., for outdoor activities)\n      const fetchWeather = async () => {\n        const weatherData = await getWeather(task.location);\n        setWeather(weatherData);\n      };\n      fetchWeather();\n    }\n  }, [task.location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Weather for \", task.location, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert('Task Deleted'),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useEffect","useState","getWeather","jsxDEV","_jsxDEV","Task","task","_s","weather","setWeather","location","fetchWeather","weatherData","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","main","temp","wind","speed","onClick","alert","_c","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/components/Task.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getWeather } from '../api/weather';\r\n\r\nconst Task = ({ task }) => {\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (task.location) {\r\n      // Fetch weather data if the task has a location (e.g., for outdoor activities)\r\n      const fetchWeather = async () => {\r\n        const weatherData = await getWeather(task.location);\r\n        setWeather(weatherData);\r\n      };\r\n      fetchWeather();\r\n    }\r\n  }, [task.location]);\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <h3>{task.name}</h3>\r\n      <p>{task.description}</p>\r\n\r\n      {/* Display weather if available */}\r\n      {weather && (\r\n        <div className=\"weather-info\">\r\n          <h4>Weather for {task.location}:</h4>\r\n          <p>Temperature: {weather.main.temp}Â°C</p>\r\n          <p>Condition: {weather.weather[0].description}</p>\r\n          <p>Wind Speed: {weather.wind.speed} m/s</p>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={() => alert('Task Deleted')}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,CAACI,QAAQ,EAAE;MACjB;MACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,MAAMC,WAAW,GAAG,MAAMV,UAAU,CAACI,IAAI,CAACI,QAAQ,CAAC;QACnDD,UAAU,CAACG,WAAW,CAAC;MACzB,CAAC;MACDD,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACL,IAAI,CAACI,QAAQ,CAAC,CAAC;EAEnB,oBACEN,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBV,OAAA;MAAAU,QAAA,EAAKR,IAAI,CAACS;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBf,OAAA;MAAAU,QAAA,EAAIR,IAAI,CAACc;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGxBX,OAAO,iBACNJ,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BV,OAAA;QAAAU,QAAA,GAAI,cAAY,EAACR,IAAI,CAACI,QAAQ,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCf,OAAA;QAAAU,QAAA,GAAG,eAAa,EAACN,OAAO,CAACa,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzCf,OAAA;QAAAU,QAAA,GAAG,aAAW,EAACN,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACY,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDf,OAAA;QAAAU,QAAA,GAAG,cAAY,EAACN,OAAO,CAACe,IAAI,CAACC,KAAK,EAAC,MAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN,eAEDf,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,cAAc,CAAE;MAAAZ,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhCIF,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}