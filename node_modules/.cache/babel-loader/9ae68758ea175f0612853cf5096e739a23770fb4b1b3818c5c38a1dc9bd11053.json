{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\quadb\\\\react-todo-app\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport TaskInput from '../components/TaskInput';\nimport TaskList from '../components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_API_KEY = '445f1860e609a11c24d90f09fa0cc0cb';\nconst Todo = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const username = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username;\n  const [tasks, setTasks] = useState([]);\n  const [loadingTaskIndex, setLoadingTaskIndex] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (username) {\n      const stored = JSON.parse(localStorage.getItem(`tasks_${username}`)) || [];\n      setTasks(stored);\n    }\n  }, [username]);\n  const handleAddTask = newTask => {\n    const updated = [...tasks, newTask];\n    setTasks(updated);\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updated));\n  };\n  const handleDelete = index => {\n    const updated = tasks.filter((_, i) => i !== index);\n    setTasks(updated);\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updated));\n  };\n  const handleFetchWeather = async (city, index) => {\n    try {\n      setLoadingTaskIndex(index);\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_API_KEY}&units=metric`);\n      const {\n        description\n      } = res.data.weather[0];\n      const temp = res.data.main.temp;\n      const updated = [...tasks];\n      updated[index].weather = `${description}, ${temp}°C`;\n      setTasks(updated);\n      localStorage.setItem(`tasks_${username}`, JSON.stringify(updated));\n    } catch (err) {\n      setError('Failed to fetch weather. Check city name.');\n    } finally {\n      setLoadingTaskIndex(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px',\n      backgroundColor: '#e6f9f2',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#2f855a',\n        marginBottom: '20px'\n      },\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: handleDelete,\n      onFetchWeather: handleFetchWeather,\n      loadingIndex: loadingTaskIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"EIN4jpxlmSI4nHg0GfUmlFa8Lgc=\", false, function () {\n  return [useLocation];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","TaskInput","TaskList","jsxDEV","_jsxDEV","WEATHER_API_KEY","Todo","_s","_location$state","location","username","state","tasks","setTasks","loadingTaskIndex","setLoadingTaskIndex","error","setError","stored","JSON","parse","localStorage","getItem","handleAddTask","newTask","updated","setItem","stringify","handleDelete","index","filter","_","i","handleFetchWeather","city","res","get","description","data","weather","temp","main","err","style","padding","backgroundColor","minHeight","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onDelete","onFetchWeather","loadingIndex","_c","$RefreshReg$"],"sources":["D:/Btech/quadb/react-todo-app/src/components/Todo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TaskInput from '../components/TaskInput';\r\nimport TaskList from '../components/TaskList';\r\n\r\nconst WEATHER_API_KEY = '445f1860e609a11c24d90f09fa0cc0cb';\r\n\r\nconst Todo = () => {\r\n  const location = useLocation();\r\n  const username = location.state?.username;\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loadingTaskIndex, setLoadingTaskIndex] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (username) {\r\n      const stored = JSON.parse(localStorage.getItem(`tasks_${username}`)) || [];\r\n      setTasks(stored);\r\n    }\r\n  }, [username]);\r\n\r\n  const handleAddTask = (newTask) => {\r\n    const updated = [...tasks, newTask];\r\n    setTasks(updated);\r\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updated));\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updated = tasks.filter((_, i) => i !== index);\r\n    setTasks(updated);\r\n    localStorage.setItem(`tasks_${username}`, JSON.stringify(updated));\r\n  };\r\n\r\n  const handleFetchWeather = async (city, index) => {\r\n    try {\r\n      setLoadingTaskIndex(index);\r\n      const res = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_API_KEY}&units=metric`\r\n      );\r\n      const { description } = res.data.weather[0];\r\n      const temp = res.data.main.temp;\r\n      const updated = [...tasks];\r\n      updated[index].weather = `${description}, ${temp}°C`;\r\n      setTasks(updated);\r\n      localStorage.setItem(`tasks_${username}`, JSON.stringify(updated));\r\n    } catch (err) {\r\n      setError('Failed to fetch weather. Check city name.');\r\n    } finally {\r\n      setLoadingTaskIndex(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '30px', backgroundColor: '#e6f9f2', minHeight: '100vh' }}>\r\n      <h2 style={{ color: '#2f855a', marginBottom: '20px' }}>Welcome, {username}!</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <TaskInput onAddTask={handleAddTask} />\r\n      <TaskList\r\n        tasks={tasks}\r\n        onDelete={handleDelete}\r\n        onFetchWeather={handleFetchWeather}\r\n        loadingIndex={loadingTaskIndex}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}